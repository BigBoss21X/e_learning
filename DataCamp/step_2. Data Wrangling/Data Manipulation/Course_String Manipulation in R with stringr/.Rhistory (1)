# Define line1
line1 <- "The table was a large one, but the three were all crowded together at one corner of it:"
# Define line2
line2 <- "'No room! No room!' they cried out when they saw Alice coming."
# Define line3
line3 <- "'There's plenty of room!' said Alice indignantly, and she sat down in a large arm-chair at one end of the table."
library(stringr)
# Define line2
line2 <- '"No room! No room!" they cried out when they saw Alice coming.'
# Define line3
line3 <- "\"There's plenty of room!\" said Alice indignantly, and she sat down in a large arm-chair at one end of the table."
# Chapter 2. What you see isn't always what you have
lines <- c(line1, line2, line3)
# Print lines
line2
library(stringr)
# Print lines
line2
# Chapter 2. What you see isn't always what you have
# Putting lines in a vector
lines <- c(line1, line2, line3)
# Print lines
line2
# Use writeLines() on lines
writeLines(lines)
# Write lines with a space separator
writeLines(lines, sep = " ")
# Use writeLines() on the string "hello\n\U1F30D"
writeLines("hello\n\U1F30D")
# Print lines
print(lines)
# Use writeLines() on lines
writeLines(lines)
# Write lines with a space separator
writeLines(lines, sep = " ")
# Use writeLines() on the string "hello\n\U1F30D"
writeLines("hello\n\U1F30D")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \ you need \\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \ you need \\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\u")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\u")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \u\\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \u\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \u")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \U")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \U\\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\U\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \"\U\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \"\U\"")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\)
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\", sep = " ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\", sep = " ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \ you need \\", sep = " ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\", sep = " ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\", sep = " ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\U", sep = " ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\\", sep = " ")
# Chapter 3. Escape sequences
# Should display: To have a \ you need \\
writeLines("To have a \\ you need \\\\")
# Part 2. Turning numbers into strings
# Chapter 1. Using format() with numbers
percent_change <- c(4, -1.91, 3.00, -5.002)
income <- c(72.19, 1030.18, 10291.93, 1189192.18)
p_values <- c(0.12, 0.98, 0.0000191, 0.00000000002)
# Part 2. Turning numbers into strings
# Chapter 1. Using format() with numbers
# Some vectors of numbers
percent_change  <- c(4, -1.91, 3.00, -5.002)
income <-  c(72.19, 1030.18, 10291.93, 1189192.18)
p_values <- c(0.12, 0.98, 0.0000191, 0.00000000002)
# Format c(0.0011, 0.011, 1) with digits = 1
format(c(0.0011, 0.011, 1), digits = 1)
# Format c(1.0011, 2.011, 1) with digits = 1
format(c(1.0011, 2.011, 1), digits = 1)
# Format percent_change to one place after the decimal point
format(percent_change, scientific = TRUE)
# Format income to whole numbers
format(income, scientific = FALSE)
# Format p_values in fixed format
format(p_values, format = "f")
percent_change  <- c(4, -1.91, 3.00, -5.002)
income <-  c(72.19, 1030.18, 10291.93, 1189192.18)
p_values <- c(0.12, 0.98, 0.0000191, 0.00000000002)
# Format c(0.0011, 0.011, 1) with digits = 1
format(c(0.0011, 0.011, 1), digits = 1)
# Format c(1.0011, 2.011, 1) with digits = 1
format(c(1.0011, 2.011, 1), digits = 1)
# Format percent_change to one place after the decimal point
format(percent_change, digits = 2)
# Format income to whole numbers
format(income, digits = 2)
# Format p_values in fixed format
format(p_values, scientific = FALSE)
# Chapter 2. Controlling other aspects of the string
formatted_income <- format(income, digits = 2)
formatted_income <- format(income, digits = 2)
# Print formatted_income
print(formatted_income)
# Call writeLines() on the formatted income
writeLines(formatted_income)
# Define trimmed_income
trimmed_income <- format(income, digits = 2, trim = TRUE)
# Call writeLines() on the trimmed_income
writeLines(trimmed_income)
# Define pretty_income
pretty_income <- format(income, digits = 2, big.mark = ",")
# Call writeLines() on the pretty_income
writeLines(pretty_income)
# Chapter 3. formatC()
# From the format() exercise
x <- c(0.0011, 0.011, 1)
y <- c(1.0011, 2.011, 1)
# formatC() on x with format = "f", digits = 1
formatC(x, format = "f", digits = 1)
# formatC() on y with format = "f", digits = 1
formatC(y, format = "f", digits = 1)
# Format percent_change to one place after the decimal point
format(percent_change, digits = 2)
# percent_change with flag = "+"
formatC(percent_change, format = "f", digits = 1, flag = "+")
# Format p_values using format = "g" and digits = 2
formatC(p_values, format = "g", digits = 2)
